# https://www.cozumpark.com/active-directoryde-kullaniciya-verilmis-delegasyon-yetkilerini-tespit-etmek/

# Kullanıcıyı SAMAccountName ile belirtin (örnek: sadece "hvadmin")
$targetSamAccountName = "hvadmin"

try {
    # Kullanıcının SID'sini al
    $user = Get-ADUser -Identity $targetSamAccountName -Properties SID
    $targetSID = $user.SID.Value
}
catch {
    Write-Host "Kullanıcı '$targetSamAccountName' bulunamadı. Lütfen doğru yazıldığından emin olun." -ForegroundColor Red
    return
}

# Tüm OU'ları al
$OUs = Get-ADOrganizationalUnit -Filter * | Select-Object -ExpandProperty DistinguishedName

# GUID açıklama tablosu oluştur
$schemaIDGUID = @{}
$ErrorActionPreference = 'SilentlyContinue'

# Şema nesneleri (GUID → İsim çeviri)
Get-ADObject -SearchBase (Get-ADRootDSE).schemaNamingContext -LDAPFilter '(schemaIDGUID=*)' -Properties name, schemaIDGUID |
ForEach-Object { $schemaIDGUID[[guid]$_.schemaIDGUID] = $_.name }

# Extended rights (GUID → İsim çeviri)
Get-ADObject -SearchBase "CN=Extended-Rights,$((Get-ADRootDSE).configurationNamingContext)" -LDAPFilter '(objectClass=controlAccessRight)' -Properties name, rightsGUID |
ForEach-Object { $schemaIDGUID[[guid]$_.rightsGUID] = $_.name }

$ErrorActionPreference = 'Continue'
$report = @()

# OU'ları tarayıp erişim kontrol listelerini analiz et
foreach ($OU in $OUs) {
    try {
        $acl = Get-Acl -Path "AD:\$OU"

        foreach ($entry in $acl.Access) {
            $entrySID = try {
                (New-Object System.Security.Principal.NTAccount($entry.IdentityReference)).Translate([System.Security.Principal.SecurityIdentifier]).Value
            } catch { $null }

            if ($entrySID -eq $targetSID) {
                $report += [PSCustomObject]@{
                    organizationalUnit        = $OU
                    identityReference         = $entry.IdentityReference
                    accessControlType         = $entry.AccessControlType
                    activeDirectoryRights     = $entry.ActiveDirectoryRights
                    isInherited               = $entry.IsInherited
                    objectTypeName            = if ($entry.ObjectType -eq [guid]::Empty) {'All'} else { $schemaIDGUID[$entry.ObjectType] }
                    inheritedObjectTypeName   = $schemaIDGUID[$entry.InheritedObjectType]
                    inheritanceType           = $entry.InheritanceType
                }
            }
        }
    }
    catch {
        Write-Warning "OU '$OU' için ACL alınamadı: $_"
    }
}

# Sonuçları göster
if ($report.Count -gt 0) {
    $report | Out-GridView -Title "Delegasyon Yetkileri: $($user.SamAccountName)"
}
else {
    Write-Host "Kullanıcı '$($user.SamAccountName)' için hiçbir OU’da doğrudan delegasyon bulunamadı." -ForegroundColor Yellow
}
